{% extends 'base.html.twig' %}

{% block title %}
    Wivet
{% endblock title %}

{% block body %}

    <div class="container">
        <div class="row treemap">

        </div>
    </div>


    <div class="container">

           <div class="row col-md-6">
               <p>
                   Test cases are created please follow the nav link or <a href="{{ path('core_common_test_case') }}">click here</a>
               </p>
               <p>
                   Or change your session for saw your crawler's activity: :)
               </p>
               <p>
                   See the result's <a href="{{ path('core_common_test_results') }}">click here</a>
               </p>
               <br>

           </div>

           <div class="row col-md-6">

               <div class="panel panel-default">
                   <div class="panel-heading">
                       Switch session <small><i>4U'r crawler</i></small>
                   </div>
                   <div class="panel-body">
                       <form action="{{ path('core_common_get_token') }}" method="post">
                           <input type="text" class="form-control" placeholder="PHPSESSID" name="token">
                           <button type="submit" class="btn btn-success btn-block"><span class="fa fa-external-link "></span> Switch</button>
                       </form>
                   </div>
                   <div class="panel-footer">
                       <small>
                           U'r session id : <b class="fetchMe" style="color: darkred;">{{ phpsessid }}</b>
                       </small>
                   </div>
               </div>

           </div>





    </div>

    <div class="container" id="gelir">

    </div>


    {#  :)  #}






{% endblock body %}

{% block javascripts %}
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/treemap.js"></script>

    <script>

        function t()
        {
            $.get('/wivet/web/app_dev.php/api/'+$('.fetchMe').text(),function(data){

                var collection = {};
                var x = [];
                console.log(data);
                console.log(JSON.stringify(window.data) == JSON.stringify(data));

                if(JSON.stringify(window.data) != JSON.stringify(data))
                {
                    window.data = data;
                    $.each(data,function(i,v){
                        if(v.click_count > 0)
                        {
                            if(collection[v.input_vector_name] == undefined)
                            {
                                collection[v.input_vector_name] = 1;
                            }
                            else
                            {
                                collection[v.input_vector_name]++;
                            }
                            x.push({
                                name: v.event_name,
                                parent: v.input_vector_name,
                                value: v.click_count
                            });
                        }


                    });

                    var treemap_data = [];
                    $.each(collection,function(i,v) {
                        treemap_data.push({
                            id:i,
                            name:i,
                            value:v,
                            color:'#'+(function lol(m,s,c){return s[m.floor(m.random() * s.length)] +
                                    (c && lol(m,s,c-1));})(Math,'0123456789ABCDEF',4)
                        });
                    });
                    $.each(x,function(i,v) {
                        treemap_data.push({
                            id: v.name,
                            name: v.name,
                            value: v.value,
                            parent: v.parent
                        });
                    });



                    $('.treemap').highcharts({
                        series: [{
                            type: "treemap",
                            layoutAlgorithm: 'strip',
                            levels: [{
                                level: 1,
                                layoutAlgorithm: 'sliceAndDice',
                                dataLabels: {
                                    enabled: true,
                                    align: 'left',
                                    verticalAlign: 'top',
                                    style: {
                                        fontSize: '15px',
                                        fontWeight: 'bold'
                                    }
                                }
                            }],
                            data: treemap_data
                        }],
                        title: {
                            text: 'Highcharts Treemap'
                        }
                    });
                    $('svg > text').hide();
                }
            });
            setTimeout(function(){
                t();
            },9000)
        }

        $(function () {
            t();
        });
    </script>

    <script>
        $(function () {
            $('#gelir').highcharts({
                title: {
                    text: 'Gelir - Gider Grafiği'
                },
                xAxis: {
                    categories: ['Aralık', 'Ocak', 'Şubat', 'Mart', 'Nisan']
                },
                labels: {
                    items: [{
                        html: 'Bakiye',
                        style: {
                            left: '50px',
                            top: '18px',
                            color: (Highcharts.theme && Highcharts.theme.textColor) || 'black'
                        }
                    }]
                },
                series: [{
                    type: 'column',
                    name: 'Eğlence',
                    data: [300, 200, 500, 300, 400]
                }, {
                    type: 'column',
                    name: 'Fatura',
                    data: [300, 200, 500, 300, 400]
                }, {
                    type: 'column',
                    name: 'Ev harcaması',
                    data: [300, 200,900, 300, 400]
                }, {
                    type: 'spline',
                    name: 'Bakiye',
                    data: [400, 200, 600, 400, 400],
                    marker: {
                        lineWidth: 2,
                        lineColor: Highcharts.getOptions().colors[3],
                        fillColor: 'white'
                    }
                }]
            });
        });
    </script>

{% endblock %}